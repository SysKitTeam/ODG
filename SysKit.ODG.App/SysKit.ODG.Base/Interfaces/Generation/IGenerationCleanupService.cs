using System.Threading.Tasks;
using SysKit.ODG.Base.Authentication;
using SysKit.ODG.Base.DTO.Generation.Results;
using SysKit.ODG.Base.Interfaces.Authentication;
using SysKit.ODG.Base.Notifier;

namespace SysKit.ODG.Base.Interfaces.Generation
{
    public interface IGenerationCleanupService
    {
        /// <summary>
        /// Saves cleanup template that can later be used to clean the environment from ODG content
        /// </summary>
        /// <param name="result"></param>
        /// <param name="filePath"></param>
        void SaveCleanupTemplate(GenerationResult result, string filePath);

        /// <summary>
        /// Executes cleanup of ODG content
        /// </summary>
        /// <param name="credentials"></param>
        /// <param name="result"></param>
        /// <param name="notifier"></param>
        /// <param name="tokenManager"></param>
        /// <returns>True if cleanup had 0 errors</returns>
        Task<bool> ExecuteCleanup(SimpleUserCredentials credentials, GenerationResult result, INotifier notifier, IAccessTokenManager tokenManager);

        /// <summary>
        /// Executes cleanup of ODG content
        /// </summary>
        /// <param name="credentials"></param>
        /// <param name="filePath">Cleanup template generated by ODG</param>
        /// <param name="notifier"></param>
        /// <param name="tokenManager"></param>
        /// <returns>True if cleanup had 0 errors</returns>
        Task<bool> ExecuteCleanup(SimpleUserCredentials credentials, string filePath, INotifier notifier, IAccessTokenManager tokenManager);
    }
}
